---
import type { QueryResponse } from "../..";
import Layout from "../layouts/Layout.astro";
import { PAGE_CONTENT_QUERY } from "../store";

import Header from "../sections/Header.astro";
import About from "../sections/About.astro";
import Experience from "../sections/Experience.astro";
import Projects from "../sections/Projects.astro";
import Writing from "../sections/Writing.astro";
import Footer from "../sections/footer/Footer.astro";

const response = await fetch("https://graphql.datocms.com/", {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    Accept: "application/json",
    Authorization: `Bearer ${import.meta.env.DATOCMS_API_KEY}`,
  },
  body: JSON.stringify({
    query: PAGE_CONTENT_QUERY,
  }),
});

const json: { data: { home: QueryResponse } } = await response.json();
const data = json.data.home;
---

<script>
  import { animate } from "motion";

  const addObserver = () => {
    const navEl = document.querySelector(".nav");
    if (!navEl || window.innerWidth < 1024) return;

    const aboutSectionRef = document.getElementById("about");
    const experienceSectionRef = document.getElementById("experience");
    const projectsSectionRef = document.getElementById("projects");

    const className = "active";
    const observer = new IntersectionObserver(
      (e) => {
        e.forEach((e) => {
          if (e.isIntersecting) {
            const s = navEl?.querySelector("a[href].".concat(className));
            s?.classList.remove(className);
            const r = navEl?.querySelector(
              'a[href="#'.concat(e.target.id, '"]')
            );
            r?.classList.add(className);
          }
        });
      },
      {
        rootMargin: "0% 0% -70% 0%",
        threshold: 0,
      }
    );

    aboutSectionRef && observer.observe(aboutSectionRef);
    experienceSectionRef && observer.observe(experienceSectionRef);
    projectsSectionRef && observer.observe(projectsSectionRef);
  };

  addObserver();

  animate("body", {
    opacity: 1,
  });
</script>

<Layout>
  <div class="">
    <div class="blur-box"></div>
    <div
      class="mx-auto min-h-screen max-w-screen-xl px-6 py-12 md:px-12 md:py-20 lg:px-24 lg:py-0"
    >
      <a
        href="#content"
        class="absolute left-0 top-0 block -translate-x-full rounded bg-gradient-to-br from-scooter-400 via-blue-500 to-purple-600 px-4 py-3 text-sm font-bold uppercase tracking-widest text-white focus-visible:translate-x-0"
      >
        Skip to Content
      </a>

      <section class="lg:flex lg:justify-between lg:gap-4">
        <Header
          title={data.titleH1}
          description={data.description}
          subtitle={data.subtitleH2}
          gmailLink={data.gmailLink}
          githubLink={data.githubLink}
          linkedinLink={data.linkedinLink}
          resumeLink={data.resumeLink}
          twitterLink={data.twitterLink}
          upworkLink={data.upworkLink}
        />
        <main id="content" class="pt-24 lg:w-1/2 lg:py-24">
          <About data={data.about} />
          <Experience jobs={data.jobExperiences} />
          <Projects projects={data.projects} />
          <Writing blogs={data.blogs} />
        </main>
      </section>
    </div>
  </div>

  <Footer />
</Layout>
